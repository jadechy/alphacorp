name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: app_user
      MYSQL_PASSWORD: hey
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up Docker
      run: |
        # Mettre à jour les packages
        sudo apt-get update

        # Ajouter le dépôt Docker
        sudo apt-get install -y \
          apt-transport-https \
          ca-certificates \
          curl \
          gnupg \
          lsb-release

        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        # Mettre à jour encore les sources après l'ajout du dépôt Docker
        sudo apt-get update
        
    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo apt-get install -y docker-compose
        
    - name: Build and run Symfony container
      run: |
        # Construire et démarrer les services définis dans docker-compose.yml à l'intérieur du conteneur
        cd .docker;
        docker-compose -f docker-compose.prod.yml up -d

    - name: Set up environment variables for Symfony
      run: |
        echo "DATABASE_URL=mysql://app_user:helloworld@database:3306/app_db?serverVersion=8.0.33" >> .env
      
    - name: Add Git Safe Directory Exception
      run: docker exec -i symfony_php_1 git config --global --add safe.directory /var/www/symfony

    - name: Fix Permissions
      run: docker exec -i symfony_php_1 chown -R www-data:www-data /var/www/symfony

    - name: Clear Symfony cache
      run: docker exec -i --user www-data symfony_php_1 php bin/console cache:clear || true

    - name: Clear Composer cache
      run: docker exec -i --user www-data symfony_php_1 composer cache:clear || true

    - name: Install Dependencies
      run: docker exec -i --user www-data symfony_php_1 composer install --no-dev --prefer-dist --no-progress --no-interaction

    # - name: Wait for MySQL to be ready
    #   run: |
    #     docker exec -e MYSQL_USER=${MYSQL_USER} -e MYSQL_PASSWORD=${MYSQL_PASSWORD} symfony_php_1 bash -c "until mysql -h mysql -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'select 1'; do echo 'Waiting for MySQL...'; sleep 5; done;"

    - name: Migrations
      run: docker exec -i symfony_php_1 php bin/console doctrine:migrations:migrate --no-interaction

    #- name: Fixtures
   #   run: docker exec -i symfony_php_1 php bin/console doctrine:fixtures:load --no-interaction

    - name: Shut down services
      run: docker-compose down