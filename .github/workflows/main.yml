name: Symfony CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: app_user
      MYSQL_PASSWORD: helloworld
      MYSQL_DB: app_db
      DATABASE_URL: mysql://app_user:helloworld@mysql:3306/app_db?serverVersion=8.0.33
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: app_db
          MYSQL_USER: app_user
          MYSQL_PASSWORD: helloworld
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
      
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Check the installed version

    - name: Build and run Symfony container
      run: |
        cd .docker
        docker-compose -f docker-compose.prod.yml up -d --build

    - name: Set up environment variables for Symfony
      run: |
        echo "DATABASE_URL=mysql://app_user:helloworld@mysql:3306/app_db?serverVersion=8.0.33" >> .env

    - name: Add Git Safe Directory Exception
      run: docker exec -i symfony_php_1 git config --global --add safe.directory /var/www/symfony

    - name: Fix Permissions
      run: docker exec -i symfony_php_1 chown -R www-data:www-data /var/www/symfony

    - name: Wait for MySQL to be ready
      run: |
        docker exec -e MYSQL_USER=app_user -e MYSQL_PASSWORD=helloworld symfony_php_1 bash -c "until mysql -h mysql -uapp_user -phey -e 'select 1'; do echo 'Waiting for MySQL...'; sleep 5; done;"

    - name: Clear Symfony cache
      run: docker exec -i --user www-data symfony_php_1 php bin/console cache:clear || true

    - name: Install Dependencies
      run: docker exec -i --user www-data symfony_php_1 composer install --no-dev --prefer-dist --no-progress --no-interaction

    - name: Migrations
      run: docker exec -i symfony_php_1 php bin/console doctrine:migrations:migrate --no-interaction

    - name: Shut down services
      run: docker-compose down
